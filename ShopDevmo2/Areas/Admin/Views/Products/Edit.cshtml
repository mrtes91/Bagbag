@*@model ShopDevmo2.Models.Product*@
@model ShopDevmo2.Models.ViewModels.ProductView
@using ShopDevmo2.Common.Constants

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2 class="font-weight-bold">Edit</h2>

@using (Html.BeginForm(Controllers.Action.EDIT, Controllers.PRODUCTS, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />

        @* Insert PartialView in here *@

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", (SelectList)ViewBag.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Material, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Material, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Material, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <script>
            // Add this line for each editor
            CKEDITOR.replace("Description");
        </script>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.FeatureImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadFile, new { @type = "file" })
                @Html.ValidationMessageFor(model => model.UploadFile, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @if (!string.IsNullOrEmpty(Model?.FeatureImage))
                {
                    <img src="@Server.UrlDecode( Model.FeatureImage)" alt="@Model.Name" class="thumbnail product-image-thumb" />
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FeatureImage1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadFile1, new { @type = "file" })
                @Html.ValidationMessageFor(model => model.UploadFile1, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @if (!string.IsNullOrEmpty(Model?.FeatureImage1))
                {
                    <img src="@Server.UrlDecode( Model.FeatureImage1)" alt="@Model.Name" class="thumbnail product-image-thumb" />
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FeatureImage2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadFile2, new { @type = "file" })
                @Html.ValidationMessageFor(model => model.UploadFile2, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @if (!string.IsNullOrEmpty(Model?.FeatureImage2))
                {
                    <img src="@Server.UrlDecode( Model.FeatureImage2)" alt="@Model.Name" class="thumbnail product-image-thumb" />
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FeatureImage3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadFile3, new { @type = "file" })
                @Html.ValidationMessageFor(model => model.UploadFile3, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @if (!string.IsNullOrEmpty(Model?.FeatureImage3))
                {
                    <img src="@Server.UrlDecode( Model.FeatureImage3)" alt="@Model.Name" class="thumbnail product-image-thumb" />
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FeatureImage4, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadFile4, new { @type = "file" })
                @Html.ValidationMessageFor(model => model.UploadFile4, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @if (!string.IsNullOrEmpty(Model?.FeatureImage4))
                {
                    <img src="@Server.UrlDecode( Model.FeatureImage4)" alt="@Model.Name" class="thumbnail product-image-thumb" />
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FeatureImage5, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UploadFile5, new { @type = "file" })
                @Html.ValidationMessageFor(model => model.UploadFile5, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @if (!string.IsNullOrEmpty(Model?.FeatureImage5))
                {
                    <img src="@Server.UrlDecode( Model.FeatureImage5)" alt="@Model.Name" class="thumbnail product-image-thumb" />
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary rounded-0 font-weight-bold mt-3" />
                <a target="_self" href="@Url.Action("Index", "Products")" class="btn btn-secondary rounded-0 font-weight-bold mt-3">Back to List</a>
            </div>
        </div>
    </div>
}

<div>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |*@
    @*@Html.ActionLink("Back to List", "Index")*@
    @*<a target="_self" href="@Url.Action("Edit", "Products", new { id = Model.Id})" class="btn btn-primary rounded-0 font-weight-bold mt-3">Save</a>*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
